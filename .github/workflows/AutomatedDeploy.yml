name: Docker build/Kubernetes Deployment Workflow

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: azure/docker-login@v1
    - uses: azure/login@v1
      with:
        login-server: olacontainerreg3.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build -f gameScoreDocker/Dockerfile . -t olacontainerreg3.azurecr.io/gameapi:${{ github.sha }}
        docker push olacontainerreg3.azurecr.io/gameapi:${{ github.sha }}
        
    - name: Login to container registry
      env:
        SERVICE_PRINCIPAL_APP_ID: ${{ secrets.SERVICE_PRINCIPAL_APP_ID }}
        SERVICE_PRINCIPAL_SECRET: ${{ secrets.SERVICE_PRINCIPAL_SECRET }}
        SERVICE_PRINCIPAL_TENANT: ${{ secrets.SERVICE_PRINCIPAL_TENANT }}
        ACR_NAME: ${{ secrets.ACR_NAME }}
      run: |
        az login \
                  --service-principal \
                  --username $(SERVICE_PRINCIPAL_APP_ID) \
                  --password $(SERVICE_PRINCIPAL_SECRET) \
                  --tenant $(SERVICE_PRINCIPAL_TENANT)
        az acr login --name $(ACR_NAME)

    - name: Get AKS credentials
      env:
        CLUSTER_RESOURCE_GROUP_NAME: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
        CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      run: |
        az aks get-credentials \
          --resource-group $CLUSTER_RESOURCE_GROUP_NAME \
          --name $CLUSTER_NAME \
          --overwrite-existing
    - name: Deploy application
      env:
        ACR_NAME: ${{ secrets.ACR_NAME }}
      run: \
        sed 's|IMAGE_REPO|$(IMAGE_REPO)|g; s/VERSION/$(VERSION)/g' ./deployment.yaml | \
                kubectl apply -f -
        
    
      
