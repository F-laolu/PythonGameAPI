name: Docker build/Kubernetes Deployment Workflow

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Read Cosmos DB connection from terraform 
      working-directory: ./terraform
      run: |
        terraform init
        terraform output -raw cosmos_key        
        COSMOSDB_SECRET=$(terraform output -raw cosmos_key)
        echo "cosmos_secret=$COSMOSDB_SECRET" >> $GITHUB_OUTPUT
    
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_NAME }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Docker build/push
      env:
        ACR_NAME: ${{ secrets.ACR_NAME }}
      run: |
        docker build -f gameScoreDocker/Dockerfile . -t $ACR_NAME/gameapi:${{ github.sha }}
        docker push $ACR_NAME/gameapi:${{ github.sha }}
        
    - name: Log in with Azure
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Get AKS credentials
      env:
        CLUSTER_RESOURCE_GROUP_NAME: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
        CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      run: |
        az aks get-credentials \
          --resource-group $CLUSTER_RESOURCE_GROUP_NAME \
          --name $CLUSTER_NAME \
          --overwrite-existing --admin
    
    - name: Create DB secret in k8s
      run: |
        kubectl create secret generic oladbconnkey1 --from-literal=cosmos_key=${{ env.cosmos_secret }} --dry-run -o yaml  \
        | kubectl apply -f -
    
    - name: Deploy application
      uses: Azure/k8s-deploy@v3.1
      with:
          action: deploy
          manifests: |
             KubDeployment/deployment.yaml
             KubDeployment/service.yaml
          images: |
             $ACR_NAME/gameapi:${{ github.sha }}


    
      
